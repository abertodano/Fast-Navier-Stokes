7/23/25 (1):
- Realized that if I want the arrays to match my physical intuition, I need to put y coord first, x second. I also need to start y at the top.
- Actually, scratch that. Just accept that any outputted arrays are flipped 90 deg.
    - Output print axes:    __________ y
                           |
                           | 
                           |
                           | 
                           x 
    - Just flip it 90 deg counterclockwise in ur brain
    - Or, use coding. np.flip(np.swapaxes([arr], 0, 1), 0) will give you the result with x and y axes in place

7/23/25 (2):
- Got a lot of stuff in. Getting sensible results with a fairly mickey-mouse model
- Haven't implemented viscosity yet, but trying a simple drag.
- realized I forgot the advective term, lol. That's needed for turbulence.
- Added simple vector plot
- Calculating self-advection (advection of each vel. component by itself), not yet included in integral formula, waiting for cross-advection

7/24/25:
- Realized my quiver plot was swapping x and y components of the velocities? I still don't know why.
    - Using meshgrid (but not directly inputting the 1-D coord arrays) and switching the outputs appeared to fix the issue. Don't know why. Monitoring.
- Implemented self-advection. Fine, but also 0 in this particular case. Makes sense, divergence = 0, should not expect steady states with net out or inflow.
- Implemented cross-advection.
    - It's working amazingly. Getting vortex results right away at low res.
    - Sustained into higher res.
    - Can I get multiple sustained vortices on screen?
- Can run into Courant issues, but they seem really avoidable so far. The iterator will just divergence and hang in such a case.
    - Developed a triage system for this for now, could use some refining.
- Got a case where it's very badly behaved using random P bnd conds
    - definitely was running into some issues with my iteration tolerance. Taking the max of the numerator and denominator indiidually was not the way, switched to taking the max of the fraction (interdiff/totaldiff
    - having fixed that, Courant is more of an issue. I do have some guns to throw at that problem though!
    - this issue with ultra high cross-vels emerging at only one side must have its own source though?
        - stumped for now. Try using 0 grad at bnd in xdivc? and ydivc?

7/25/25:
- Got a case where the large arrows occured at the other side of the square before the "breakdown". That narrows down the possible causes
- Making movies with a consistent arrow scale.
    - Now noticing a real increase in magnitude leading up to the breakdown
- had forgotten to sqrt the velcoity magnitude (mag_c) in DragForces. fixed.
    - now requiring far higher C_D's
- I'm still observing those edge currents, but more limitedly. I'm not convinced I need to focus on them.
- Another observation: I am starting with du/dx = dv/dy = 0. It is staying that way, permanently.
    - Tried adding a small balancing du/dx and dv/dy at bottom right corner. Remained fully unaltered thru simulation, propagated to end.
        - same thing with a 4-face vortex loop added at any point.
    - So, this is strange... dDdt is happy just... being 0. Always.

To do:

Thoughts:
- might the cross-advection ever need something like a flux limiter for num. stability?